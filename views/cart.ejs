<div class="container">
    <div class="grid">
        <div class="subtotal">
            <h1 class="subtotal-header">Your Cart</h1>
            <div class="boxSub">
                <div class="texSub">
                    <span class="texSub-span">Subtotal</span>
                    <span class="totalCost costSub">$<%= totalPrice %></span>
                </div>
                <button class="checkout">
                    <i class="fa-solid fa-cart-shopping"></i>
                    CHECKOUT
                </button>
            </div>
        </div>
        <div class="boxListCart">
            <% if (cartItems.length > 0) { %>
                <ul class="listCart">
                    <% cartItems.forEach(item => { %>
                        <li class="itemCart">
                            <div class="boxInfoProductC">
                                <img src="/assets/images/<%= item.image %>" alt="<%= item.name %>" width="120px" height="120px">
                                <div class="InfoProduct">
                                    <h3><%= item.name %></h3>

                                    <span><strong>Serving Option:</strong> <%= item.servingOption %></span>

                                    <span><strong>Price:</strong> $<%= item.price %></span>
                                </div>
                            </div>
                            <div class="boxInfoCostC">
                                <div class="BoxQuantity">
                                    <span >Quantity</span>
                                    <span class="qtt"><%= item.quantity %></span>
                                </div>
                                <span class="costC">$<%= item.totalCost %></span>
                                <button class="x" data-id="<%= item.id %>" data-option="<%= item.servingOption %>">x</button>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            <% } %>

        </div>
        <div class="checkout1">
            <div class="boxInfoCheckout">
                <span class="boxInfoCheckout--header">Subtotal</span>
                <span class="totalCost InfoCost boxInfoCheckout--header">$<%= totalPrice %></span>
            </div>
            <div class="boxInfoCheckout">
                <span class="boxInfoCheckout--header">Total Items</span>
                <span class="totalItems InfoCost boxInfoCheckout--header"><%= totalItems %></span>
            </div>
            <button class="checkout">
                <i class="fa-solid fa-cart-shopping"></i> CHECKOUT
            </button>
            <a href="/products" style="display: block; text-decoration: none; color: #A7661B; cursor: pointer; font-size: 15px; text-align: center; margin-top: 10px;">Continue shopping ></a>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.x').forEach((remove_span) => {
        remove_span.addEventListener('click', async () => {
            const productID = remove_span.dataset.id;
            const servingOption = remove_span.dataset.option;
            console.log(productID);
            console.log(servingOption)
            try{
                const response = await fetch('/cart/remove-item', {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productID: productID, servingOption: servingOption })
                });

                if (response.ok) {
                    const data = await response.json();

                    const newTotalPrice = data.newTotalPrice;
                    const newTotalItems = data.newTotalItems;
                    remove_span.closest('.itemCart').remove();
                    const totalCost = document.querySelectorAll('.totalCost');
                    const totalItems = document.querySelector('.totalItems');
                    totalCost.forEach((cost) => {
                        cost.innerText = `$${newTotalPrice}`
                    })
                    totalItems.innerText = `${newTotalItems}`;
                    alert(data.message);
                }

                else{
                    const error = await response.json();
                    alert(`Error: ${error.error}`)
                }
            } catch (err){
                console.error('Error:', err);
                alert('An error occurred. Please try again.');
            }
        })
    })
    document.querySelectorAll('.checkout').forEach((checkout) => {
        checkout.addEventListener('click', async () => {
            try{
                const response = await fetch('/cart/order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                });

                const result = await response.json();

                if (response.ok){
                    window.location.href = '/order';
                    alert(result.message);
                }

                else{
                    alert(`Error: ${result.error}`);
                }
            }

            catch (err){
                console.error('Error:', err);
                alert('An error occurred. Please try again.');
            }
        })
    })
    document.querySelectorAll('.BoxQuantity .qtt').forEach((quantity_span) => {
        const parent = quantity_span.closest('.itemCart');
        const productID = parent.querySelector('.x').dataset.id;
        const servingOption = parent.querySelector('.x').dataset.option;
        const totalCostSpan = parent.querySelector('.costC');
        const productPrice = parseFloat(parent.querySelector('.InfoProduct span:last-child').innerText.replace('Price: $', ''));

        const decrementButton = document.createElement('button');
        decrementButton.innerText = '-';
        decrementButton.addEventListener('click', async () => {
            let currentQuantity = parseInt(quantity_span.innerText);
            if (currentQuantity > 1) {
                currentQuantity--;
                quantity_span.innerText = currentQuantity;
                updateQuantity(productID, servingOption, currentQuantity);
            }
        });

        const incrementButton = document.createElement('button');
        incrementButton.innerText = '+';
        incrementButton.addEventListener('click', async () => {
            let currentQuantity = parseInt(quantity_span.innerText);
            currentQuantity++;
            quantity_span.innerText = currentQuantity;
            updateQuantity(productID, servingOption, currentQuantity);
        });

        quantity_span.parentNode.insertBefore(decrementButton, quantity_span);
        quantity_span.parentNode.insertBefore(incrementButton, quantity_span.nextSibling);

        async function updateQuantity(productID, servingOption, newQuantity) {
            try {
                const response = await fetch('/cart/update-quantity', {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productID: productID, servingOption: servingOption, newQuantity: newQuantity })
                });

                if (response.ok) {
                    const data = await response.json();
                    const newTotalPrice = data.newTotalPrice;
                    const newTotalItems = data.newTotalItems;

                    totalCostSpan.innerText = `$${(productPrice * newQuantity).toFixed(2)}`;
                    const totalCost = document.querySelectorAll('.totalCost');
                    const totalItems = document.querySelector('.totalItems');
                    totalCost.forEach((cost) => {
                        cost.innerText = `$${newTotalPrice}`;
                    });
                    totalItems.innerText = `${newTotalItems}`;
                } else {
                    const error = await response.json();
                    alert(`Error: ${error.error}`);
                }
            } catch (err) {
                console.error('Error:', err);
                alert('An error occurred. Please try again.');
            }
        }
    });
</script>